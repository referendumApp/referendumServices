name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (prod/test)'
        required: true
        default: 'test'

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: referendum/api
  EC2_INSTANCE_ID: i-08edd9a77b42449b2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set deployment variables
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          echo "DEPLOY_ENV=prod" >> $GITHUB_ENV
          echo "IMAGE_TAG=prod-${{ github.sha }}" >> $GITHUB_ENV
        else
          echo "DEPLOY_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.event.inputs.environment }}-${{ github.sha }}" >> $GITHUB_ENV
        fi

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker compose build app
        docker tag referendumapi_app:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}

    - name: Deploy to EC2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        aws ssm send-command \
          --instance-ids "${{ env.EC2_INSTANCE_ID }}" \
          --document-name "AWS-RunShellScript" \
          --parameters '{
            "commands": [
              "aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}",
              "echo \"ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}\" > .env",
              "echo \"ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}\" >> .env",
              "echo \"IMAGE_TAG=${{ env.IMAGE_TAG }}\" >> .env",
              "docker compose -f docker-compose.prod.yml down",
              "docker compose -f docker-compose.prod.yml up -d",
              "echo ${{ env.DEPLOY_ENV }} deployment completed successfully!"
            ]
          }'

    - name: Verify Deployment
      run: |
        aws ec2 describe-instance-status --instance-ids ${{ env.EC2_INSTANCE_ID }}