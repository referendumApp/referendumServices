name: Run User Service Tests

on:
  push:
    branches: [main]
    paths:
      - "user_service/**"
      - ".github/workflows/user_service_test.yml"
  pull_request:
    branches: [main]
    paths:
      - "user_service/**"
      - ".github/workflows/user_service_test.yml"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true
          cache-dependency-path: user_service/go.sum

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          working-directory: user_service

  build-schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true
          cache-dependency-path: user_service/go.sum

      - name: Build Lexicon Schema
        working-directory: user_service
        run: go run ./cmd/lexgen --build-file ./cmd/lexgen/build-config.json "./cmd/lexgen/lexicons/com/referendumapp"

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build Dependency Images
      run: docker compose --profile=user-test build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker Layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Image
      uses: docker/build-push-action@v6
      with:
        context: ./user_service
        file: ./user_service/Dockerfile
        push: false
        load: true
        tags: user-test:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    
    - name: Run Tests
      run: docker compose run user-test

    - name: Move Cache
      run: |
        if [ -d /tmp/.buildx-cache-new ] && [ "$(ls -A /tmp/.buildx-cache-new)" ]; then
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        fi

    - name: Clean Tests
      if: always()
      run: docker compose down -v
