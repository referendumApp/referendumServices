name: Run User Service Tests

on:
  push:
    branches: [main]
    paths:
      - "user_service/**"
      - ".github/workflows/user_service_test.yml"
  pull_request:
    branches: [main]
    paths:
      - "user_service/**"
      - ".github/workflows/user_service_test.yml"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true
          cache-dependency-path: user_service/go.sum

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          working-directory: user_service

  build-schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true
          cache-dependency-path: user_service/go.sum

      - name: Build Lexicon Schema
        working-directory: user_service
        run: go run ./cmd/lexgen --build-file ./cmd/lexgen/build-config.json "./cmd/lexgen/lexicons/com/referendumapp"

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker Layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Migrations Image
      uses: docker/build-push-action@v6
      with:
        context: ./data_service
        file: ./data_service/Dockerfile
        target: migrations
        push: false
        load: true
        tags: migrations:${{ github.sha }}-${{ github.run_number }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new1,mode=max

    - name: Set Go cache env vars
      run: |
        echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
        echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

    - name: Build Test Image
      uses: docker/build-push-action@v6
      with:
        context: ./user_service
        file: ./user_service/Dockerfile
        target: test
        push: false
        load: true
        tags: user-test:${{ github.sha }}-${{ github.run_number }}
        build-args: |
          GOMODCACHE=${{ env.GOMODCACHE }}
          GOCACHE=${{ env.GOCACHE }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new2,mode=max
    
    - name: Update Cache
      run: |
        echo "Current directory structure before any operations:"
        ls -la /tmp/
        
        echo "Removing old cache directory if it exists..."
        rm -rf /tmp/.buildx-cache-old || true
        
        echo "Creating new merged cache directory..."
        mkdir -p /tmp/.buildx-cache-new-merged
        
        echo "Available cache directories:"
        ls -la /tmp/.buildx-cache-new* 2>/dev/null || echo "No .buildx-cache-new* directories found"
        
        echo "Merging cache directories..."
        for dir in /tmp/.buildx-cache-new*; do
          if [ -d "$dir" ] && [ "$(ls -A "$dir" 2>/dev/null)" ]; then
            echo "Processing directory: $dir"
            echo "Contents of $dir:"
            ls -la "$dir" | head -10  # Show first 10 files/dirs for debugging
            echo "Copying files from $dir to /tmp/.buildx-cache-new-merged/"
            cp -r "$dir"/* /tmp/.buildx-cache-new-merged/ 2>/dev/null || echo "Warning: Copy from $dir had some errors (this may be normal for some files)"
          fi
        done
        
        echo "Contents of merged directory:"
        ls -la /tmp/.buildx-cache-new-merged/ | head -10  # Show first 10 files/dirs
        
        if [ -f "/tmp/.buildx-cache-new-merged/index.json" ]; then
          echo "SUCCESS: index.json found in merged directory"
        else
          echo "WARNING: index.json not found in merged directory"
        fi
        
        echo "Removing old cache directory..."
        rm -rf /tmp/.buildx-cache || true
        
        echo "Moving merged cache to main cache location..."
        mv /tmp/.buildx-cache-new-merged /tmp/.buildx-cache
        
        echo "Final cache directory structure:"
        ls -la /tmp/.buildx-cache/ 2>/dev/null || echo "Cache directory does not exist or is empty"
        
        echo "Cleaning up temporary cache directories..."
        rm -rf /tmp/.buildx-cache-new* || true

    - name: Run Tests
      run: |
        docker run \
          --name user-test \
          --env AWS_ACCESS_KEY_ID=$S3_ACCESS_KEY \
          --env AWS_SECRET_ACCESS_KEY=$S3_SECRET_KEY \
          --env MINIO_API_PORT=9000 \
          --env MINIO_CONSOLE_PORT=9001 \
          --env KMS_PORT=9002 \
          --env-file .env \
          --volume /var/run/docker.sock:/var/run/docker.sock \
          --add-host host.docker.internal:host-gateway
          user-test

    - name: Clean Tests
      if: always()
      run: docker compose down -v
