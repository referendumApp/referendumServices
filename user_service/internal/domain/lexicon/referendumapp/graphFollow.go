// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package referendumapp

// schema: com.referendumapp.graph.follow

import (
	"github.com/bluesky-social/indigo/lex/util"
	"github.com/referendumApp/referendumServices/internal/domain/atp"
	"github.com/referendumApp/referendumServices/internal/repo"
)

func init() {
	util.RegisterType("com.referendumapp.graph.follow", &GraphFollow{})
}

// RECORDTYPE: GraphFollow
type GraphFollow struct {
	LexiconTypeID string `json:"$type" cborgen:"$type,const=com.referendumapp.graph.follow" validate:"required"`
	CreatedAt     string `json:"createdAt" cborgen:"createdAt" validate:"required,datetime"`
	Subject       string `json:"subject" cborgen:"subject" validate:"required,did"`
}

// GraphFollow_Input is the input argument to a com.referendumapp.graph.follow call.
type GraphFollow_Input struct {
	// did: Atproto DID to follow.
	Did string `json:"did" cborgen:"did" validate:"required,did"`
	// targetCollection: Atproto NSID for the target.
	TargetCollection string `json:"targetCollection" cborgen:"targetCollection" validate:"required,nsid"`
	// targetID: Atproto actor ID to follow.
	TargetID atp.Aid `json:"targetID" cborgen:"targetID" validate:"required"`
}

func (t GraphFollow) NSID() string {
	return "com.referendumapp.graph.follow"
}

func (t GraphFollow) Key() string {
	return repo.NextTID()
}
