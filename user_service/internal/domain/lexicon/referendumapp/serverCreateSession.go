// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package referendumapp

// schema: com.referendumapp.server.createSession

import (
	"github.com/referendumApp/referendumServices/internal/domain/atp"
)

// ServerCreateSession_Input is the input argument to a com.referendumapp.server.createSession call.
type ServerCreateSession_Input struct {
	GrantType string `json:"grantType" cborgen:"grantType" validate:"required,oneof=password"`
	Password  string `json:"password" cborgen:"password" validate:"required"`
	// username: Handle or other identifier supported by the server for the authenticating user.
	Username string `json:"username" cborgen:"username" validate:"required,username"`
}

// ServerCreateSession_Output is the output of a com.referendumapp.server.createSession call.
type ServerCreateSession_Output struct {
	AccessToken    string       `json:"accessToken" cborgen:"accessToken" validate:"required"`
	Aid            atp.Aid      `json:"aid" cborgen:"aid" validate:"required"`
	Did            string       `json:"did" cborgen:"did" validate:"required,did"`
	DidDoc         *interface{} `json:"didDoc,omitempty" cborgen:"didDoc,omitempty" validate:"omitempty"`
	DisplayName    string       `json:"displayName" cborgen:"displayName" validate:"required,name"`
	Email          string       `json:"email" cborgen:"email" validate:"required,email"`
	EmailConfirmed *bool        `json:"emailConfirmed,omitempty" cborgen:"emailConfirmed,omitempty" validate:"omitempty"`
	Handle         string       `json:"handle" cborgen:"handle" validate:"required,handle"`
	RefreshToken   string       `json:"refreshToken" cborgen:"refreshToken" validate:"required"`
	TokenType      string       `json:"tokenType" cborgen:"tokenType" validate:"required"`
}
