// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package referendumapp

// schema: com.referendumapp.legislator.profile

import (
	"github.com/bluesky-social/indigo/lex/util"
)

func init() {
	util.RegisterType("com.referendumapp.legislator.profile", &LegislatorProfile{})
}

// RECORDTYPE: LegislatorProfile
type LegislatorProfile struct {
	LexiconTypeID   string        `json:"$type" cborgen:"$type,const=com.referendumapp.legislator.profile" validate:"required"`
	Address         *string       `json:"address,omitempty" cborgen:"address,omitempty" validate:"omitempty"`
	District        string        `json:"district" cborgen:"district" validate:"required"`
	Facebook        *string       `json:"facebook,omitempty" cborgen:"facebook,omitempty" validate:"omitempty"`
	Image           *util.LexBlob `json:"image,omitempty" cborgen:"image,omitempty" validate:"omitempty"`
	ImageUrl        *string       `json:"imageUrl,omitempty" cborgen:"imageUrl,omitempty" validate:"omitempty"`
	Instagram       *string       `json:"instagram,omitempty" cborgen:"instagram,omitempty" validate:"omitempty"`
	LegislativeBody string        `json:"legislativeBody" cborgen:"legislativeBody" validate:"required"`
	Level           string        `json:"level" cborgen:"level" validate:"required,oneof=federal,oneof=state,oneof=local"`
	Name            string        `json:"name" cborgen:"name" validate:"required"`
	Party           string        `json:"party" cborgen:"party" validate:"required"`
	Phone           *string       `json:"phone,omitempty" cborgen:"phone,omitempty" validate:"omitempty,e164"`
	State           string        `json:"state" cborgen:"state" validate:"required"`
	Twitter         *string       `json:"twitter,omitempty" cborgen:"twitter,omitempty" validate:"omitempty"`
}

func (t LegislatorProfile) NSID() string {
	return "com.referendumapp.legislator.profile"
}

func (t LegislatorProfile) Key() string {
	return "self"
}
